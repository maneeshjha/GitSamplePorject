package com.inf.dvo.mbm.Bean.Master;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import com.inf.dvo.mbm.Bean.CommonMethodBean;
import com.inf.dvo.mbm.DAO.CommonForm;
import com.inf.dvo.mbm.DAO.Master.DepartmentForm;
import com.inf.dvo.mbm.DBConnection.DBConnection;

public class DepartmentBean 
{
	DBConnection	dbConn	=	new DBConnection();

	/**
	 * Method Name  : saveCountryMaster
	 * Purpose		: To saveCountryMaster
	 * @author		: Prashant
	 * Date			: 09/03/2012
	 * 
	 */
	public String saveDepartmentMaster(DepartmentForm departmentForm,String userName) 
	{
		
		CommonMethodBean	commonMethodBean	=	new CommonMethodBean();
		String			outputString			=	"";
		Connection		con						=	null;
		PreparedStatement	pst					=	null;
		String				query				=	"";
		String				departmentName		=	departmentForm.getDepartmentName().trim().toUpperCase();
		String				departmentDesc		=	departmentForm.getDepartmentDesc()!=null && departmentForm.getDepartmentDesc().length() > 0 ? departmentForm.getDepartmentDesc().trim().toUpperCase() : "";
		String				status				=	departmentForm.getStatus();
		try
		{
			
			if(commonMethodBean.checkDuplicate("department_master","department_name",departmentName) == false)
			{
				outputString	=	"FAIL.DEPARTMENT NAME : "+departmentName+" IS ALREADY PRESENT.";
			}
			else
			{	
				con		=	dbConn.connect();
				query	=	"	insert into department_master(department_name, department_desc, status, createdby, createdon, updatedby, updatedon	)" +
							"	values	(?, ?, ?, ?, sysdate(), ?, sysdate())";
				pst		=	con.prepareStatement(query);
				pst.setString(1,departmentName);
				pst.setString(2,departmentDesc);
				pst.setString(3,status);
				pst.setString(4,userName);
				pst.setString(5,userName);
				
				int	count	=	pst.executeUpdate();
				if(count > 0)
				{
					outputString	=	"PASS.DEPARTMENT NAME : "+departmentName+" SAVED SUCCESSFULLY.";
				}
				pst.close();
			}
		}
		catch(Exception e)
		{
			outputString = "ERROR";
			System.out.println("ERROR In DepartmentBean.saveDepartmentMaster:"+e);
		}
		finally
		{
			try
			{
				if(con != null)
				{
					con.close();
					con	=	null;
				}
			}
			catch(Exception e)
			{
				outputString = "ERROR";
				System.out.println("Exception While Closing The Connection in DepartmentBean.saveDepartmentMaster:"+e);
			}
		}
		return outputString;
	}
	
	/**
	 * Method Name  : getSearchDepartmentList
	 * Purpose		: To getSearchDepartmentList
	 * @author		: Prashant
	 * Date			: 09/03/2012
	 * 
	 */
	
	public ArrayList<CommonForm> getSearchDepartmentList(DepartmentForm departmentForm) 
	{
		ArrayList<CommonForm> dataList		=	new ArrayList<CommonForm>();
		Connection		con			=	null;
		Statement		st			=	null;
		ResultSet		rs			=	null;
		String			query		=	"";
		int				srNo		=	1;
		String			departmentId	=	departmentForm.getDepartmentId();
		String			status			=	departmentForm.getStatus();
		try
		{
			
			query	+=	"	select 	departmentid, department_name, department_desc, status" +
						"	from	department_master" +
						"	where   0=0";
			if(departmentId!= null && departmentId.length() > 0)
			{	
			query	+=	"			and departmentid	=	'"+departmentId+"'";
			}
			if(status!= null && status.length() > 0)
			{	
			query	+=	"			and status		=	'"+status+"'";
			}
			
			query	+=	"	order by	department_name";
			
			con		=	dbConn.connect();
			st		=	con.createStatement();
			rs		=	st.executeQuery(query);
			while(rs.next())
			{
				CommonForm	cForm	=	new CommonForm();
				cForm.setField1(""+(srNo++));//SRNO
				cForm.setField2(rs.getString(1));//departmentid
				cForm.setField3(rs.getString(2));//department_name
				cForm.setField4(rs.getString(3)!=null && rs.getString(3).length() > 0 ? rs.getString(3) : "-");//department_desc
				cForm.setField5(rs.getString(4));//status
				
				dataList.add(cForm);
			}
		}
		catch(Exception e)
		{
			System.out.println("ERROR In DepartmentBean.getSearchDepartmentList:"+e);
		}
		finally
		{
			try
			{
				if(con != null)
				{
					con.close();
					con	=	null;
				}
			}
			catch(Exception e)
			{
				System.out.println("Exception While Closing The Connection in DepartmentBean.getSearchDepartmentList:"+e);
			}
		}
		return dataList;
		
	}
	
	/**
	 * Method Name  : getDataForModify
	 * Purpose		: To getDataForModify
	 * @author		: Prashant
	 * Date			: 09/03/2012
	 * 
	 */
	
	public ArrayList<CommonForm> getDataForModify(String departmentId)
	{
		ArrayList<CommonForm> dataList		=	new ArrayList<CommonForm>();
		Connection		con			=	null;
		Statement		st			=	null;
		ResultSet		rs			=	null;
		String			query		=	"";
		try
		{
		
			query	+=	"	select 	departmentid, department_name, department_desc, status" +
						"	from	department_master" +
						"	where   departmentid	=	'"+departmentId+"'";
		
			
			con		=	dbConn.connect();
			st		=	con.createStatement();
			rs		=	st.executeQuery(query);
			
			while(rs.next())
			{
				CommonForm	cForm	=	new CommonForm();
				
				cForm.setField1(rs.getString(1));//departmentid
				cForm.setField2(rs.getString(2));//department_name
				cForm.setField3(rs.getString(3));//department_desc
				cForm.setField4(rs.getString(4));//status
				
				dataList.add(cForm);
			}
		
		}
		catch(Exception e)
		{
			System.out.println("ERROR In DepartmentBean.getDataForModify:"+e);
		}
		finally
		{
			try
			{
				if(con != null)
				{
					con.close();
					con	=	null;
				}
			}
			catch(Exception e)
			{
				System.out.println("Exception While Closing The Connection in DepartmentBean.getDataForModify:"+e);
			}
		}
		return dataList;
	}
	
	/**
	 * Method Name  : getModifyDepartmentMaster
	 * Purpose		: To getModifyDepartmentMaster
	 * @author		: Prashant
	 * Date			: 09/03/2012
	 * 
	 */
	
	public String getModifyDepartmentMaster(DepartmentForm departmentForm,String userName)
	{
		CommonMethodBean	commonMethodBean	=	new CommonMethodBean();
		String			outputString		=	"";
		Connection		con					=	null;
		PreparedStatement	pst				=	null;
		String			query				=	"";
		String			departmentId		=	departmentForm.getDepartmentId();
		String			departmentName		=	departmentForm.getDepartmentName().trim().toUpperCase();
		String			departmentDesc		=	departmentForm.getDepartmentDesc()!=null && departmentForm.getDepartmentDesc().length() > 0 ? departmentForm.getDepartmentDesc().trim().toUpperCase() : "";
		String			status				=	departmentForm.getStatus();
		boolean			flag				=	true;
		int				count				=	0;
		int				totalCount			=	0;
		try
		{
			if(commonMethodBean.checkDuplicateForModification("department_master", "department_name", departmentName, "departmentid", departmentId) == false)
			{
				flag			=	false;
				outputString	=	"FAIL.DEPARTMENT NAME : "+departmentName+" IS ALREADY PRESENT.";
			}
			
			count	=	commonMethodBean.checkForActive("employee_master","department", "department", departmentId); 
			if(count > 0)
			{
				if(status.equalsIgnoreCase("INACTIVE"))
				{
					flag			=	false;
					totalCount		=	1;
					outputString	=	"FAIL.CANNOT MODIFY  : EMPLOYEES ARE PRESENT AGAINST DEPARTMENT NAME : "+departmentName;
				}
			}
			if(totalCount == 0)
			{
				count	=	commonMethodBean.checkForIsProperDelete("employee_master", "employeeid", "department",departmentId);
				if(count > 0)
				{
					flag			=	false;
					outputString	=	"FAIL.CANNOT MODIFY : EMPLOYEES ARE PRESENT AGAINST DEPARTMENT NAME : "+departmentName;
				}
			}	
			if(flag == true)
			{	
					query		+=	"	update 	department_master " +
									"	set	   	department_name	=	?, " +
									"		   	department_desc	=	?, "+
									"		   	status		=	?," +
									"          	updatedby	=	?, " +
									"		   	updatedon	=	sysdate()" +
									"	where   departmentid	=	? ";
					
					con			=	dbConn.connect();
					pst			=	con.prepareStatement(query);
					
					pst.setString(1, departmentName);
					pst.setString(2,departmentDesc);
					pst.setString(3,status);
					pst.setString(4,userName);
					pst.setString(5,departmentId);
					
					int	cnt		=	pst.executeUpdate();
					if(cnt > 0)
					{
						outputString	=	"PASS.DEPARTMENT NAME : "+departmentName+" MODIFIED SUCCESSFULLY.";
					}
			}
		}
		catch(Exception e)
		{
			outputString = "ERROR";
			System.out.println("ERROR In DepartmentBean.getModifyCountryMaster:"+e);
		}
		finally
		{
			try
			{
				if(con != null)
				{
					con.close();
					con	=	null;
				}
			}
			catch(Exception e)
			{
				outputString = "ERROR";
				System.out.println("Exception While Closing The Connection in DepartmentBean.getModifyCountryMaster:"+e);
			}
		}
		return outputString;
	}
	
	/**
	 * Method Name  : deleteDeaprtment
	 * Purpose		: To deleteDeaprtment
	 * @author		: Prashant
	 * Date			: 09/03/2012
	 * 
	 */
	
	public String deleteDeaprtment(String departmentId, String departmentName) 
	{
		String				outputString		=	"";
		CommonMethodBean	commonMethodBean	=	new CommonMethodBean();
		Connection			con					=	null;
		Statement			st					=	null;
		String				query				=	"";
		int 				count				=	0;
		
		try
		{
			count	=	commonMethodBean.checkForIsProperDelete("employee_master", "employeeid", "department",departmentId);	
			if(count > 0)
			{
				outputString	=	"FAIL.CANNOT MODIFY : EMPLOYEES ARE PRESENT AGAINST DEPARTMENT NAME : "+departmentName;
			}	
			else
			{	
					query	+=	"	delete " +
								"	from	department_master ";
				if(departmentId!= null && departmentId.length() > 0)
				{	
					query	+=	"	where  	departmentid	=	'"+departmentId+"'";
				}	
					con				=	dbConn.connect();
					st				=	con.createStatement();
					count			=	st.executeUpdate(query);
					if( count > 0)
					{
						outputString	=	"PASS.DEPARTMENT NAME : "+departmentName+" DELETED SUCCESSFULLY.";
					}
					else
					{
						outputString	=	"FAIL.DEPARTMENT NAME : "+departmentName+" NOT DELETE.";
					}
			}		
				
		}
		catch(Exception e)
		{
			outputString = "ERROR";
			System.out.println("ERROR In DepartmentBean.deleteDeaprtment:"+e);
		}
		finally
		{
			try
			{
				if(con != null)
				{
					con.close();
					con	=	null;
				}
			}
			catch(Exception e)
			{
				outputString = "ERROR";
				System.out.println("Exception While Closing The Connection in DepartmentBean.deleteDeaprtment :"+e);
			}
		}
		return outputString;
	}
	

}
